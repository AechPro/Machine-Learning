package NEAT.Configs;

public interface Config
{
	static final PoleConfig cfg = new PoleConfig();
	public final double CONNECTION_ADD_CHANCE = cfg.CONNECTION_ADD_CHANCE;
	public final double NODE_ADD_CHANCE = cfg.NODE_ADD_CHANCE;
	public final double CROSSOVER_RATE = cfg.CROSSOVER_RATE;
	public final double WEIGHT_MUTATION_RATE = cfg.WEIGHT_MUTATION_RATE;
	public final double MAX_MUTATION_PERTURBATION = cfg.MAX_MUTATION_PERTURBATION;
	public final double WEIGHT_REPLACEMENT_RATE = cfg.WEIGHT_REPLACEMENT_RATE;
	public final double ACTIVATION_RESPONSE_MUTATION_RATE = cfg.ACTIVATION_RESPONSE_MUTATION_RATE;
	public final double INHERITED_CONNECTION_ENABLE_RATE = cfg.INHERITED_CONNECTION_ENABLE_RATE;
	public final double MUTATED_CONNECTION_ENABLE_RATE = cfg.MUTATED_CONNECTION_ENABLE_RATE;
	public final double MUTATED_CONNECTION_TOGGLE_RATE = cfg.MUTATED_CONNECTION_TOGGLE_RATE;
	public final double SPECIES_AGE_FITNESS_MODIFIER = cfg.SPECIES_AGE_FITNESS_MODIFIER;
	public final int SPECIES_OLD_THRESHOLD = cfg.SPECIES_OLD_THRESHOLD;
	public final int SPECIES_YOUNG_THRESHOLD = cfg.SPECIES_YOUNG_THRESHOLD;
	public final int SPECIES_SIZE_FOR_CHAMP_CLONING = cfg.SPECIES_SIZE_FOR_CHAMP_CLONING;
	public final int MAX_ALLOWED_NODES = cfg.MAX_ALLOWED_NODES;
	public final int MAX_ATTEMPTS_ADD_CONNECTION = cfg.MAX_ATTEMPTS_ADD_CONNECTION;
	public final int MAX_ATTEMPTS_ADD_NODE = cfg.MAX_ATTEMPTS_ADD_NODE;
	public final int MAX_ATTEMPTS_FIND_PARENT = cfg.MAX_ATTEMPTS_FIND_PARENT;
	public final double COMPAT_EXCESS_COEF = cfg.COMPAT_EXCESS_COEF;
	public final double COMPAT_DISJOINT_COEF = cfg.COMPAT_DISJOINT_COEF;
	public final double COMPAT_SHARED_COEF = cfg.COMPAT_SHARED_COEF;
	public final int MAX_ALLOWED_ORGANISM_AGE = cfg.MAX_ALLOWED_ORGANISM_AGE;
	public final int MAX_TIME_ORGANISM_STAGNATION = cfg.MAX_TIME_ORGANISM_STAGNATION;
	public final int MAX_TIME_SPECIES_STAGNATION = cfg.MAX_TIME_SPECIES_STAGNATION;
	public final int MAX_TIME_POPULATION_STAGNATION = cfg.MAX_TIME_POPULATION_STAGNATION;
	public final double SPECIES_COMPAT_THRESHOLD = cfg.SPECIES_COMPAT_THRESHOLD;
	public final int POPULATION_SIZE = cfg.POPULATION_SIZE;
	public final double WORST_PERCENT_REMOVED = cfg.WORST_PERCENT_REMOVED;
	public final double MATE_NO_MUTATION_CHANCE = cfg.MATE_NO_MUTATION_CHANCE;
	public final double RECURSIVE_CONNECTION_CHANCE = cfg.RECURSIVE_CONNECTION_CHANCE;
	public final double NUM_POP_CHAMP_MUTATIONS = cfg.NUM_POP_CHAMP_MUTATIONS;
}